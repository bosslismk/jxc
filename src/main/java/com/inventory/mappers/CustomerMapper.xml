<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inventory.dao.CustomerDAO" >
  <resultMap id="CustomerResult" type="Customer" >
    <id column="customerId" property="customerid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="contactman" property="contactman" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="depositBank" property="depositbank" jdbcType="VARCHAR" />
    <result column="bankAccount" property="bankaccount" jdbcType="VARCHAR" />
    <result column="taxNum" property="taxnum" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="findById" resultMap="CustomerResult">
		select * from in_customer where customerId=#{customerid}
	</select>
	<select id="findAll" resultMap="CustomerResult">
		select * from in_customer 
		where 1=1
		<if test="name != null and name !=''">
			and name like #{name}
		</if>
		<if test="status != null and status !=''">
			and status = #{status}
		</if>
		order by createTime desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="countAll" resultType="Long">
		select count(1) from in_customer 
		where 1=1
		<if test="name != null and name !=''">
			and name like #{name}
		</if>
		<if test="status != null and status !=''">
			and status = #{status}
		</if>
	</select>
  <insert id="save" parameterType="Customer" >
    insert into in_customer (customerId, name, contactman, 
      position, address, tel, 
      depositBank, bankAccount, taxNum, 
      website, email, remarks, 
      status,  createTime, 
      updateTime)
    values (null, #{name,jdbcType=VARCHAR}, #{contactman,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{depositbank,jdbcType=VARCHAR}, #{bankaccount,jdbcType=VARCHAR}, #{taxnum,jdbcType=VARCHAR}, 
      #{website,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, now(), 
      now())
  </insert>
  <update id="update" parameterType="Customer" >
    update in_customer
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="contactman != null" >
        contactman = #{contactman,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="depositbank != null" >
        depositBank = #{depositbank,jdbcType=VARCHAR},
      </if>
      <if test="bankaccount != null" >
        bankAccount = #{bankaccount,jdbcType=VARCHAR},
      </if>
      <if test="taxnum != null" >
        taxNum = #{taxnum,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where customerId = #{customerid,jdbcType=INTEGER}
  </update>
  <delete id="delete">
		delete from in_customer where customerId in
		<foreach item="idItem" collection="array" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
</mapper>