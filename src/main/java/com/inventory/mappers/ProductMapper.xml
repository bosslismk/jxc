<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inventory.dao.ProductDAO">

	<resultMap id="ProductResult" type="Product" >
    <id column="productId" property="productid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="inPrice" property="inprice" jdbcType="DECIMAL" />
    <result column="outPrice" property="outprice" jdbcType="DECIMAL" />
    <result column="stocks" property="stocks" jdbcType="INTEGER" />
    <result column="minstocks" property="minstocks" jdbcType="INTEGER" />
    <result column="maxstocks" property="maxstocks" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  	<association property="category" column="categoryId" select="com.inventory.dao.ProductCategoryDAO.findById"></association>
  </resultMap>
	<select id="findById" resultMap="ProductResult">
		select * from in_product where productId=#{productid}
	</select>
	<select id="findAll" resultMap="ProductResult">
		select * from in_product 
		where 1=1
		<if test="name != null and name !=''">
			and name like #{name}
		</if>
		order by createTime desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="countAll" resultType="Long">
		select count(1) from in_product 
		where 1=1
		<if test="name != null and name !=''">
			and name like #{name}
		</if>
	</select>
	<insert id="save">
		insert into in_product (productId, name, categoryId, 
      model, unit, inPrice, 
      outPrice, stocks, minstocks, 
      maxstocks, createTime, updateTime
      )
    values (null, #{name,jdbcType=VARCHAR}, #{categoryid,jdbcType=INTEGER}, 
      #{model,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{inprice,jdbcType=DECIMAL}, 
      #{outprice,jdbcType=DECIMAL}, #{stocks,jdbcType=INTEGER}, #{minstocks,jdbcType=INTEGER}, 
      #{maxstocks,jdbcType=INTEGER}, now(), now()
      )
	</insert>
	<update id="update">
		update in_product 
		<set>
		<if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null" >
        categoryId = #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null" >
        inPrice = #{inprice,jdbcType=DECIMAL},
      </if>
      <if test="outprice != null" >
        outPrice = #{outprice,jdbcType=DECIMAL},
      </if>
      <if test="stocks != null" >
        stocks = #{stocks,jdbcType=INTEGER},
      </if>
      <if test="minstocks != null" >
        minstocks = #{minstocks,jdbcType=INTEGER},
      </if>
      <if test="maxstocks != null" >
        maxstocks = #{maxstocks,jdbcType=INTEGER},
      </if>
    </set>
    	where productId = #{productid,jdbcType=INTEGER}
	</update>
	<delete id="delete">
		delete from in_product where productId in
		<foreach item="idItem" collection="array" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
</mapper> 