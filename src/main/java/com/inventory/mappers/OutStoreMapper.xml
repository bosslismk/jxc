<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inventory.dao.OutStoreDAO">
  <resultMap id="OutStoreResult" type="OutStore">
    <id column="outNo" jdbcType="VARCHAR" property="outno" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderno" />
    <result column="deliverPerson" jdbcType="VARCHAR" property="deliverperson" />
    <result column="operater" jdbcType="VARCHAR" property="operater" />
    <result column="reviewer" jdbcType="VARCHAR" property="reviewer" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <select id="findAll" resultMap="OutStoreResult">
  select *
    from in_out_store
    where 1=1
    <if test="outno !=null and outno !=''">
    	outNo like #{outno}
    </if>
  	<if test="type !=null and type !=''">
    	type = #{type}
    </if>
  	<if test="status !=null and status !=''">
    	status = #{status}
    </if>
  	order by createTime desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
  </select>
  <select id="countAll" resultType="Long">
  select count(1)
    from in_out_store
    where 1=1
    <if test="outno !=null and outno !=''">
    	outNo like #{outno}
    </if>
  	<if test="type !=null and type !=''">
    	type = #{type}
    </if>
  	<if test="status !=null and status !=''">
    	status = #{status}
    </if>
  </select>
  <select id="findById" parameterType="java.lang.String" resultMap="OutStoreResult">
    select *
    from in_out_store
    where outNo = #{outno,jdbcType=VARCHAR}
  </select>
   <delete id="delete">
		delete from in_out_store where orderNo in
		<foreach item="idItem" collection="array" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
  <insert id="save" parameterType="com.inventory.entity.OutStore">
    insert into in_out_store (outNo, orderNo, deliverPerson, 
      operater, reviewer, type, 
      status, createTime, updateTime
      )
    values (#{outno,jdbcType=VARCHAR}, #{orderno,jdbcType=VARCHAR}, #{deliverperson,jdbcType=VARCHAR}, 
      #{operater,jdbcType=VARCHAR}, #{reviewer,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, now(), now()
      )
  </insert>
   
  <update id="update"  >
    update in_out_store
    <set>
      
      <if test="deliverperson != null">
        deliverPerson = #{deliverperson,jdbcType=VARCHAR},
      </if>
      <if test="operater != null">
        operater = #{operater,jdbcType=VARCHAR},
      </if>
      <if test="reviewer != null">
        reviewer = #{reviewer,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where outNo = #{outno,jdbcType=VARCHAR}
  </update>
</mapper>